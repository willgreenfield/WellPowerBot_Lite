{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Documents\\\\GitHub\\\\WellPowerBot_Lite\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as firebase from 'firebase';\nimport OrderEntry from './components/OrderEntry.js';\nconst NEW_ORDERS_DATABASE_REF = '/customerRequests';\n\nclass App extends Component {\n  constructor(props, ctx) {\n    super(props, ctx);\n    this.finishOrder = this.finishOrder.bind(this);\n    this.cancelOrder = this.cancelOrder.bind(this);\n    this.orderService.on('updated', this.updateOrders);\n    this.state = {\n      orders: []\n    };\n    console.log(\"Initial orders array initialized\");\n  }\n\n  componentDidMount() {\n    console.log(\"Running componentDidMount()\");\n    const ordersRef = firebase.database().ref(NEW_ORDERS_DATABASE_REF);\n    ordersRef.on('value', snap => {\n      let orders = snap.val();\n      let newState = [];\n      var count = 0; //number of orders in database\n      //Convert firebase object to array\n\n      for (let order in orders) {\n        count++;\n        newState.push({\n          orderNumber: count,\n          phone: orders[order].phone,\n          location: orders[order].location,\n          price: orders[order].price,\n          waterOrdered: orders[order].waterOrdered,\n          status: orders[order].orderStatus\n        });\n        console.log(\"order entry added to newState\");\n      }\n\n      this.setState({\n        newState\n      });\n      console.log(\"New state set\");\n    });\n  }\n\n  updateOrders({\n    orders\n  }) {\n    this.setState({\n      orders\n    });\n  }\n\n  assignDriver(order) {\n    console.log('assign Driver button');\n  }\n\n  finishOrder(order) {\n    console.log('Finish button');\n  }\n\n  cancelOrder(order) {\n    console.log('Cancel button');\n  }\n\n  render() {\n    console.log(\"Rendering\");\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"WellPower Orders\"), React.createElement(\"div\", {\n      className: \"order-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.orders.map(entry => React.createElement(OrderEntry, {\n      order: entry,\n      onCancel: this.cancelOrder,\n      onFinished: this.finishOrder,\n      assignDriver: this.assignDriver,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))));\n  } //end of render()\n\n\n} //end of class App() extends component\n\n\nconsole.log(\"Exporting app\");\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Will\\Documents\\GitHub\\WellPowerBot_Lite\\src\\App.js"],"names":["React","Component","firebase","OrderEntry","NEW_ORDERS_DATABASE_REF","App","constructor","props","ctx","finishOrder","bind","cancelOrder","orderService","on","updateOrders","state","orders","console","log","componentDidMount","ordersRef","database","ref","snap","val","newState","count","order","push","orderNumber","phone","location","price","waterOrdered","status","orderStatus","setState","assignDriver","render","map","entry"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as firebase from 'firebase';\n\nimport OrderEntry from './components/OrderEntry.js';\n\nconst NEW_ORDERS_DATABASE_REF = '/customerRequests';\n\nclass App extends Component {\n\n  constructor(props, ctx) {\n    super(props, ctx);\n    this.finishOrder = this.finishOrder.bind(this);\n    this.cancelOrder = this.cancelOrder.bind(this);\n    this.orderService.on('updated', this.updateOrders);\n    this.state = { orders: [] };\n    console.log(\"Initial orders array initialized\");\n  }\n\n  componentDidMount() {\n    console.log(\"Running componentDidMount()\");\n    const ordersRef = firebase.database().ref(NEW_ORDERS_DATABASE_REF);\n    ordersRef.on('value', snap => {\n      let orders = snap.val();\n      let newState = [];\n      var count = 0; //number of orders in database\n\n      //Convert firebase object to array\n      for (let order in orders) {\n        count++;\n        newState.push({\n          orderNumber: count,\n          phone: orders[order].phone,\n          location: orders[order].location,\n          price: orders[order].price,\n          waterOrdered: orders[order].waterOrdered,\n          status: orders[order].orderStatus\n        });\n\n        console.log(\"order entry added to newState\");\n      }\n      this.setState({ newState });\n      console.log(\"New state set\");\n    });\n  }\n\n  updateOrders({ orders }) {\n    this.setState({ orders});\n  }\n\n  assignDriver(order) {\n    console.log('assign Driver button');\n  }\n\n  finishOrder(order) {\n    console.log('Finish button');\n  }\n\n  cancelOrder(order) {\n    console.log('Cancel button');\n  }\n\n  render() {\n    console.log(\"Rendering\");\n    return (\n      <div className=\"App\">\n        <h1>WellPower Orders</h1>\n        <div className=\"order-list\">\n          {this.state.orders.map(entry => (\n            <OrderEntry\n              order={entry}\n              onCancel={this.cancelOrder}\n              onFinished={this.finishOrder}\n              assignDriver={this.assignDriver}\n\n            />\n        ))}\n        </div>\n      </div>\n    );\n  } //end of render()\n} //end of class App() extends component\n\nconsole.log(\"Exporting app\");\nexport default App;\n"]},"metadata":{},"sourceType":"module"}